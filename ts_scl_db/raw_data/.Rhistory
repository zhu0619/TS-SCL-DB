data_comp[,'GO']=as.character(data_comp[,'GO'])
data_cellwhere_go[,'GO']=as.character(data_cellwhere_go[,'GO'])
k=1
union_data=data.frame()
for (i in 1:nrow(data_comp)){
for (j in 1:nrow(data_cellwhere_go)){
if (data_comp[i,'GO']==data_cellwhere_go[j,'GO']){
union_data[k,]=c(data_comp[i,],data_cellwhere_go[j,'cellular_component_term'])
k=k+1
}
}
}
View(union_data)
View(union_data)
View(union_data)
View(union_data)
warnings()
unique(data_cellwhere_go)
unique(data_cellwhere_go[,'cellwhere_loc'])
length(unique(data_cellwhere_go[,1 ]))
length(unique(data_cellwhere_go[,2 ]))
duplicate
dupli
duplic
duplicat
duplicat()
duplic()
duplicated(data_cellwhere_go[,2 ])
where(duplicated(data_cellwhere_go[,2 ])==TRUE)
which(duplicated(data_cellwhere_go[,2 ])==TRUE)
which(duplicated(data_cellwhere_go[,2])==TRUE)
which(data_cellwhere_go[,2]==1252)
which(data_cellwhere_go[,2]==data_cellwhere_go[1252,2])
data_cellwhere_go[253,]
data_cellwhere_go[1252,]
where(duplicated(data_comp[,3])==TRUE)
which(duplicated(data_comp[,3])==TRUE)
which(data_cellwhere_go[,2]==data_cellwhere_go[1252,2])
where(data_comp[,3]==data_cellwhere_go[1252,2])
which(data_comp[,3]==data_cellwhere_go[1252,2])
which(data_comp[,3]==data_cellwhere_go[,2])
which(data_comp[,3]==data_cellwhere_go)
comp_GO
duplicated(comp_GO)
duplicated(unique(data_comp[,4])
)
data_comp= read.table("/Users/zhulu/Desktop/DATA/SCL_human/COMP_220415/human_compartment_knowledge_full.tsv",header=FALSE,sep="\t")[,1:4];
colnames(data_comp)=c('string_id','geneSymbol','GO','cellular_component_term')
summary(data_comp)
data_cellwhere_go= read.table("/Users/zhulu/Desktop/DATA/Mapping_table/cellwhere_scl_terms/cellwhere_GO.txt",header=FALSE,sep="\t");
colnames(data_cellwhere_go)=c('GO','cellular_component_term','cellwhere_loc')
summary(data_cellwhere_go)
length(unique(data_cellwhere_go[,1 ]))
length(unique(data_cellwhere_go[,'cellwhere_loc']))
# in cellwhere, it contains 52 different loc terms, some of them are the 'membrane' of sub cellular compartements.
install.packages("getOBOCollection")
install.packages("getOBOCollection")
getOBOCollectionsource("http://bioconductor.org/biocLite.R")
biocLite("GSEABase")
source("http://bioconductor.org/biocLite.R")
biocLite("GSEABase")
install.packages("getOBOCollection")
getOBOCollection
biocLite("GSEABase")
library("GSEABase", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getOBOCollection
help()
help(getOBOCollection)
fl <- system.file("extdata", "goslim_plant.obo", package="GSEABase")
getOBOCollection(fl)
data=getOBOCollection(fl)
f1
l
fl
data
data=getOBOCollection("/Users/zhulu/Desktop/DATA/GO/go-basic.obo")
data=getOBOCollection("/Users/zhulu/Desktop/DATA/GO/test.obo")
data
summary(data)
attributes(data)
kv=data$.kv
kv=data$kv
kv=data.kv
kv=data$.kv
values=data$value
values=data[$value]
values=data->$value
values=data$ids
values=attributes(data)$ids
kv=attributes(data)$.kv
values=attributes(data)$values
which(kv[kv['key']=="namespace"]
namespace
which(kv[kv['key']=="namespace"]
)
kv['key']
which(kv['key']=="namespace"])
which(kv['key']=="namespace")
help(which)
which(kv['key']=="namespace",arr.ind = TRUE)
kv
values
which(kv[,'key']=="namespace",arr.ind = TRUE)
which(kv[,'key']=="namespace")
kv[,11]
kv[11]
kv[11,]
rownames(kv)[which(kv[,'key']=="namespace")]
values
attributes(data)$values
attributes(data)$value
attributes(data)
values=attributes(data)$value
values
kv[which[kv[,'value']=='molecular_function','stanza_id']
]
kv[which(kv[,'value']=='molecular_function'),'stanza_id']]
kv[which(kv[,'value']=='molecular_function'),'stanza_id']
scl_term=which(kv[,'stanza_id']==GO&&kv[,'key']=='name')
GO=kv[which(kv[,'value']=='molecular_function'),'stanza_id']
scl_term=which(kv[,'stanza_id']==GO&&kv[,'key']=='name')
which(kv[,'value']=='molecular_function')
which(kv[,'value']=='molecular_function')-1
scl_term=kv[which(kv[,'value']=='molecular_function')-1,'value']
scl_term
scl_term=kv[which(kv[,'value']=='molecular_function')-1,c('stanza_id','value')]
scl_term
GO=kv[which(kv[,'value']=='cellular_component'),'stanza_id']
#scl_term=which(kv[,'stanza_id']==GO&&kv[,'key']=='name')
scl_term=kv[which(kv[,'value']=='molecular_function')-1,c('stanza_id','value')]
scl_term=kv[which(kv[,'value']=='cellular_component')-1,c('stanza_id','value')]
print(scl_term)
data=getOBOCollection("/Users/zhulu/Desktop/DATA/GO/go-basic.obo")
data=getOBOCollection("/Users/zhulu/Desktop/DATA/GO/go-basic.obo")
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",sep="\t")
View(data_go)
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
View(data_go)
length(data_go)
length(data_go[,1])
length(unique(data_go[,1]))
duplicated(data_go[,1])
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
length(data_go[,1])
length(unique(data_go[,1]))
duplicated(data_go[,1])
which(duplicated(data_go[,1])==TRUE)
data_go[255,1]
unique(data_go[,])
which(duplicated(data_go)==TRUE)
which(duplicated(data_go[,2])==TRUE)
data_go[which(duplicated(data_go[,2])==TRUE)]
data_go[which(duplicated(data_go[,2])==TRUE),]
data_go[which(duplicated(data_go[,])==TRUE),]
data_go[which(duplicated(data_go[,1])==TRUE),]
data_go[which(duplicated(data_go[,1])==TRUE),1]
data_go[which(duplicated(data_go[,1])==TRUE),]
data_go[which(duplicated(data_go[,2])==TRUE),]
data_go[which(duplicated(data_go[1041,2])==TRUE),]
data_go[which(duplicated(data_go[,1])==TRUE),]
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
length(data_go[,1])
length(unique(data_go[,1]))
data_go[which(duplicated(data_go[,1])==TRUE),]
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
length(data_go[,1])
length(unique(data_go[,1]))
data_go[which(duplicated(data_go[,1])==TRUE),]
unique_go_id=unique(data_go[,1])
data_comp= read.table("/Users/zhulu/Desktop/DATA/SCL_human/COMP_220415/human_compartment_knowledge_full.tsv",header=FALSE,sep="\t")[,1:4];
comp_GO=unique(data_comp[,'GO'])
colnames(data_cellwhere_go)=c('GO','cellular_component_term','cellwhere_loc')
summary(data_cellwhere_go)
data_comp= read.table("/Users/zhulu/Desktop/DATA/SCL_human/COMP_220415/human_compartment_knowledge_full.tsv",header=FALSE,sep="\t")[,1:4];
colnames(data_comp)=c('string_id','geneSymbol','GO','cellular_component_term')
summary(data_comp)
comp_GO=unique(data_comp[,'GO'])
length(comp_GO)
data_comp[,'GO']=as.character(data_comp[,'GO'])
data_comp[,'GO']
comp_GO=unique(data_comp[,'GO'])
length(unique(c(unique_go_id,comp_GO))
)
length(unique_go_id)
unique_go_id
length(unique(data_go[,1]))
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
length(data_go[,1])
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
View(data_go)
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
length(data_go[,1])
length(unique(data_go[,1]))
data_go[which(duplicated(data_go[,1])==TRUE),]
unique_go_id=unique(data_go[,1])
length(unique_go_id)
length(unique(c(unique_go_id,comp_GO))
)
length(comp_GO)
length(unique_go_id)
comp_GO
unique_go_id
unique_go_id=as.character(unique(data_go[,1]))
length(unique_go_id)
length(comp_GO)
length(unique(c(unique_go_id,comp_GO)))
length(diff(c(unique_go_id,comp_GO)))
diff
length(df(unique_go_id,comp_GO)))
length(df(unique_go_id,comp_GO))
which(duplicated(c(unique_go_id,comp_GO))==FALSE)
which(duplicated(c(unique_go_id,comp_GO))==TRUE)
length(unique_go_id)
length(comp_GO)
length(unique(c(unique_go_id,comp_GO)))
library(data.table)
unique_go_id[!comp_GO]
setdiff(unique_go_id,comp_GO)
unique_go_id %in% comp_GO
comp_GO[comp_GO %in% unique_go_id]
comp_GO[!comp_GO %in% unique_go_id]
data_cellwhere_go= read.table("/Users/zhulu/Desktop/DATA/Mapping_table/cellwhere_scl_terms/cellwhere_GO.txt",header=FALSE,sep="\t");
colnames(data_cellwhere_go)=c('GO','cellular_component_term','cellwhere_loc')
summary(data_cellwhere_go)
length(unique(data_cellwhere_go[,1 ]))
length(unique(data_cellwhere_go[,'cellwhere_loc']))
cw_GO=unique(data_cellwhere_go[,'GO'])
length(unique_go_id)
length(cw_GO)
length(unique(c(unique_go_id,cw_GO)))
comp_GO[!cw_GO %in% unique_go_id]
cw_GO[!cw_GO %in% unique_go_id]
cw_GO[!cw_GO %in% unique_go_id]
cw_GO=unique(as.character(data_cellwhere_go[,'GO']))
length(unique_go_id)
length(cw_GO)
length(unique(c(unique_go_id,cw_GO)))
cw_GO[!cw_GO %in% unique_go_id]
cw_GO[!cw_GO %in% comp_GO]
comp_GO[!comp_GO %in% cw_GO]
length(comp_GO)
length(cw_GO)
cw_GO[!cw_GO %in% comp_GO]
comp_GO[!comp_GO %in% cw_GO]
length(unique(c(comp_GO,cw_GO)))
2229-1796
length(cw_GO[!cw_GO %in% comp_GO])
length(duplicated(c(comp_GO,cw_GO)))
length(which(duplicated(c(comp_GO,cw_GO)))==TRUE)
length(cw_GO[!cw_GO %in% comp_GO])
1210+1796
-2229
1210+1796-2229
data_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl.txt",header=TRUE,sep="\t")
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
View(data_go)
View(alt_go)
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,]=c(alt_go[i,2],data_go[alt_go[i,1],2])
j=j+1
}
View(alt_go_scl_term)
data_go[alt_go[1,1],2]
alt_go[1,2]
alt_go= as.character(read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t"))
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,]=c(alt_go[i,2],data_go[alt_go[i,1],2])
j=j+1
}
alt_go= as.character(read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t"))
alt_go=as.character(alt_go
)
as.character
alt_go[,1]=as.character(alt_go[,1])
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
alt_go[,1]=as.character(alt_go[,1])
alt_go[,2]=as.character(alt_go[,2])
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,]=c(alt_go[i,2],data_go[alt_go[i,1],2])
j=j+1
}
nrow(alt_go)
c(alt_go[i,2],data_go[alt_go[i,1],2])
i
alt_go[i,1]
alt_go_scl_term[j,]=c(alt_go[i,2],data_go[where(data_go[,1]==alt_go[i,1]),2])
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
alt_go[,1]=as.character(alt_go[,1])
alt_go[,2]=as.character(alt_go[,2])
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,]=c(alt_go[i,2],data_go[which(data_go[,1]==alt_go[i,1]),2])
j=j+1
}
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
alt_go[,1]=as.character(alt_go[,1])
alt_go[,2]=as.character(alt_go[,2])
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,1]=alt_go[i,2]
alt_go_scl_term[j,2]=data_go[which(data_go[,1]==alt_go[i,1]),2])
j=j+1
}
alt_go= read.table("/Users/zhulu/Desktop/DATA/GO/go-basic-scl-alt-id.txt",header=TRUE,sep="\t")
alt_go[,1]=as.character(alt_go[,1])
alt_go[,2]=as.character(alt_go[,2])
alt_go_scl_term=data.frame()
j=1
for(i in 1:nrow(alt_go)){
alt_go_scl_term[j,1]=alt_go[i,2]
alt_go_scl_term[j,2]=data_go[which(data_go[,1]==alt_go[i,1]),2]
j=j+1
}
View(alt_go_scl_term)
View(alt_go_scl_term)
View(alt_go_scl_term)
View(alt_go_scl_term)
all_go=rbind(data_go,alt_go_scl_term)
View(data_go)
colnames(alt_go_scl_term)==colnames(data_go)
colnames(alt_go_scl_term)=colnames(data_go)
all_go=rbind(data_go,alt_go_scl_term)
unique_go_id=as.character(unique(all_go[,1]))
length(unique_go_id)
length(comp_GO)
#---------------------COMPATEMENTS data---------------------------#
data_comp= read.table("/Users/zhulu/Desktop/DATA/SCL_human/COMP_220415/human_compartment_knowledge_full.tsv",header=FALSE,sep="\t")[,1:4];
colnames(data_comp)=c('string_id','geneSymbol','GO','cellular_component_term')
summary(data_comp)
barplot(summary(data_comp[,3]))
#---------------------CellWhere data---------------------------#
data_cellwhere_go= read.table("/Users/zhulu/Desktop/DATA/Mapping_table/cellwhere_scl_terms/cellwhere_GO.txt",header=FALSE,sep="\t");
colnames(data_cellwhere_go)=c('GO','cellular_component_term','cellwhere_loc')
summary(data_cellwhere_go)
length(unique(data_cellwhere_go[,1 ]))
length(unique(data_cellwhere_go[,'cellwhere_loc']))
# in cellwhere, it contains 52 different loc terms, some of them are the 'membrane' of sub cellular compartements.
# here I replace these membrane terms by the major compartements.
# so, finally , the 1796 scl terms are summerized in to 43 different SCL terms
#SCL GO in Cellwhere
cw_GO=unique(as.character(data_cellwhere_go[,'GO']))
length(cw_GO)
#1796
# SCL GO in COMPARTEMENTS
comp_GO=unique(data_comp[,'GO'])
length(comp_GO)
#1210
# in common
cw_GO=as.character(cw_GO)
comp_GO=as.character(comp_GO)
length(unique(c(cw_GO,comp_GO)))
#2229
# map the cellwhere summerized scl terms to Compartements knowledge SCL data by GO terms
data_comp[,'GO']=as.character(data_comp[,'GO'])
data_cellwhere_go[,'GO']=as.character(data_cellwhere_go[,'GO'])
k=1
union_data=data.frame()
for (i in 1:nrow(data_comp)){
for (j in 1:nrow(data_cellwhere_go)){
if (data_comp[i,'GO']==data_cellwhere_go[j,'GO']){
union_data[k,]=c(data_comp[i,],data_cellwhere_go[j,'cellular_component_term'])
k=k+1
}
}
}
length(comp_GO)
length(unique(c(unique_go_id,comp_GO)))
comp_GO[!comp_GO %in% unique_go_id]
# [1] "GO:0035085" "GO:0005932" "GO:0000441"
# these are the GO terms which are not in Go basic scl terms
# but actually there are noted as altenative id for the protein  e.g.alt_id: GO:0005932
length(unique_go_id)
length(cw_GO)
length(unique(c(unique_go_id,cw_GO)))
cw_GO[!cw_GO %in% unique_go_id]
# [1] "GO:0016599" "GO:0005932" "GO:0009434" "GO:0030482" "GO:0035086" "GO:0035085" "GO:0045285" "GO:0000119" "GO:0018994" "GO:0005842"
cw_GO
comp_GO[!comp_GO %in% cw_GO]
cw_GO[!cw_GO %in% comp_GO]
diff_comp_cw=comp_GO[!comp_GO %in% cw_GO]
diff_comp_cw %in%alt_go
diff_comp_cw %in%alt_go[,1]
diff_comp_cw %in%alt_go[,2]
cw_GO[alt_go]
cw_GO[alt_go[,1]]
cw_go_with_alt = NULL
for (i in cw_GO){
if (i %in% alt_go[,1]){
cw_go_with_alt=c(cw_go_with_alt,alt_go[which(alt_go[,1]==i),2])
}
}
cw_go_with_alt = cw_GO
for (i in cw_GO){
if (i %in% alt_go[,1]){
cw_go_with_alt=c(cw_go_with_alt,alt_go[which(alt_go[,1]==i),2])
}
}
cw_go_with_alt = cw_GO
for (i in cw_GO){
if (i %in% alt_go[,1]){
cw_go_with_alt=c(cw_go_with_alt,alt_go[which(alt_go[,1]==i),2])
}
if (i %in% alt_go[,2]){
cw_go_with_alt=c(cw_go_with_alt,alt_go[which(alt_go[,1]==i),1])
}
}
comp_go_with_alt = comp_GO
for (i in comp_GO){
if (i %in% alt_go[,1]){
comp_go_with_alt=c(comp_go_with_alt,alt_go[which(alt_go[,1]==i),2])
}
if (i %in% alt_go[,2]){
comp_go_with_alt=c(comp_go_with_alt,alt_go[which(alt_go[,1]==i),1])
}
}
length(comp_GO_with_alt)
length(comp_go_with_alt)
length(cw_go_with_alt)
length(unique(c(comp_go_with_alt,cw_go_with_alt)))
length(which(duplicated(c(comp_go_with_alt,cw_go_with_alt)))==TRUE)
length(cw_go_with_alt[!cw_go_with_alt %in% comp_go_with_alt])
diff_comp_cw_with_alt=comp_go_with_alt[!comp_go_with_alt %in% cw_go_with_alt]
diff_comp_cw_with_alt
diff_comp_cw_with_alt=comp_GO[!comp_GO %in% cw_go_with_alt]
diff_comp_cw_with_alt
View(data_go)
View(data_comp)
View(data_cellwhere_go)
data=read.csv("/Users/zhulu/Desktop/DATA/SCL_human/human_protein_atlas/normal_tissue.csv/normal_tissue.csv")
summary(data)
tissue = data[,"Tissue"]
tissue=attributes(tissue)$level
summary(tissue)
view(tissue)
tissue
install.packages(c("htmltools", "manipulate"))
runif(1)
runif(1,0,1)
rmvnorm
install.packages('igraph')
t1_pmids = fread('all_tissueCL_pubmed_ID_1_f.txt',sep=',')
setwd("~/Desktop/Lu_work/text-mining-project/TSCL-DB/mysite/polls/raw_data")
bto = read.csv('bto_filtered_2211.vocab.txt')
head(bto)
bto = read.csv('bto_filtered_2211.vocab.txt',sep='\t')
head(bto)
words = bto[,2]
duplicated(words)
words[duplicated(words)]
bto[bto[,2] %in% words[duplicated(words)],]
bto = read.csv('bto_filtered_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
bto[bto[,2] %in% words[duplicated(words)],]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
bto[bto[,2] %in% words[duplicated(words)],]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
bto[bto[,2] %in% words[duplicated(words)],]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
bto[bto[,2] %in% words[duplicated(words)],]
dup = words[duplicated(words)]
sort(dup)
bto[bto[,2] %in% sort(dup),]
bto[bto[,2] %in% order(dup),]
sort(bto[bto[,2] %in% dup,])
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
bto = read.csv('subcellular_go_2211.vocab.txt',sep='\t',header = F)
head(bto)
words = bto[,2]
dup = words[duplicated(words)]
bto[bto[,2] %in% dup,]
